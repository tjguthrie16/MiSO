<!DOCTYPE html>
<html>
<head>
    <title>Michigan Snowbelt Observer</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <style>
        #map { height: 100vh; width: 100vw; }
        .map-popup {
            max-width: 400
            text-align: center;
            font-family: Arial, sans-serif;
        }
        .map-popup iframe, .map-popup img {
            max-width: 100%;
            height: auto;
            margin-bottom: 10px;
        }
        .map-popup button {
            display: inline-block;
            padding: 8px 12px;
            font-size: 14px;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-bottom: 10px;
        }
        .map-popup button:hover {
            background-color: #0056b3;
        }
        .weather-info {
            font-size: 14px;
            margin-top: 10px;
        }
        .courtesy-note {
            font-size: 12px;
            color: #555;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <script>
        const map = L.map('map').setView([45, -85], 6);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        const pinData = [
    { city: "Wakefield", lat: 46.494796, lng: -89.923172, videoUrl: "https://www.youtube.com/embed/oGb4tcsTJfg", courtesy: "Courtesy of Snow Chaser's Lodge" },
    { city: "Mancelona", lat: 44.7942, lng: -85.0922, videoUrl: "https://ipcamlive.com/player/player.php?alias=61019fa1322cc", courtesy: "Courtesy of Settings Restaurant" },
    { city: "Alanson", lat: 45.4626, lng: -84.7475, videoUrl: "http://spankys.safe100.net:8080/video.mjpg?q=30&fps=33&id=0.5", courtesy: "Courtesy of Spanky's Powersports" },
    { city: "Indian River", lat: 45.5183, lng: -84.6289, videoUrl: "http://24.247.18.14/cgi-bin/viewer/video.jpg", courtesy: "Courtesy of Fay Martin River Resort" },
    { city: "Gaylord", title: "Gaylord, MI - Trail 7", lat: 45.0286, lng: -84.6814, videoUrl: "https://www.youtube.com/embed/hKRglZeUGI0", courtesy: "Courtesy of Sledview.com" },
    { city: "Gaylord", title: "Gaylord, MI - NWS Snowstick", lat: 45.0386, lng: -84.7014, videoUrl: "https://www.weather.gov/images/apx/webcam/snowstick.jpg", courtesy: "Courtesy of NWS Gaylord" },
    { city: "Calumet", lat: 47.2476, lng: -88.4522, videoUrl: "https://www.pasty.com/bridge/MainST.jpg", courtesy: "Courtesy of Superior Properties" },
    { city: "Calumet", lat: 47.2480, lng: -88.4534, videoUrl: "https://tsl.uarhelp.com/mjpg/video.mjpg", courtesy: "Courtesy of The Trailside Lodge" },
    { city: "Marquette", lat: 46.5586, lng: -87.4065, videoUrl: "https://it.nmu.edu/campics/jxj.jpg", courtesy: "Courtesy of Northern Michigan University" },
    { city: "Bergland", lat: 46.6667, lng: -89.5167, videoUrl: "https://www.timberlinesport.net/camera/tlsmain.jpg", courtesy: "Courtesy of Timberline Sports" },
    { city: "Gaylord", title: "Gaylord, MI - EarthCam", lat: 45.0333, lng: -84.6745, videoUrl: "https://www.youtube.com/embed/DQAUwQMcF1w", courtesy: "Courtesy of EarthCam YouTube Channel" },
    { city: "Grayling", lat: 44.661, lng: -84.714, videoUrl: "https://video.nest.com/embedded/live/fUEpooBBRQ?autoplay=0", courtesy: "Courtesy of Camp Makwa" },
    { city: "Mackinac City", lat: 45.777, lng: -84.727, videoUrl: "https://www.youtube.com/embed/DaKrzRiiE1s", courtesy: "Courtesy of Riviera Motel" },
    { city: "Grand Marais", lat: 46.6712, lng: -85.985, videoUrl: "https://video.nest.com/embedded/live/6turwtgSUw?autoplay=0", courtesy: "Courtesy of The Bayshore Market" },
    { city: "Grand Marais", lat: 46.6725, lng: -85.9812, videoUrl: "https://video.nest.com/embedded/live/A2SY1WyGt4?autoplay=0", courtesy: "Courtesy of Superior Hardware and ExploreMunising.com" },
    { city: "Newberry", lat: 46.3558, lng: -85.5109, videoUrl: "https://video.nest.com/embedded/live/FyfabqFRq6?autoplay=0", courtesy: "Courtesy of The Newberry News" },
    { city: "Grand Haven", lat: 43.0631, lng: -86.2282, videoUrl: "http://99.129.240.227:8005/cgi-bin/api.cgi?cmd=Snap&channel=0&rs=wuuPhkmUCeI9WG7C&user=admin&password=vtk1453", courtesy: "No courtesy" },
    { city: "Allendale", lat: 42.9728, lng: -85.9536, videoUrl: "https://cam-antmedia.gvsu.edu:5443/LiveApp/play.html?name=299282376489809678477713", courtesy: "Courtesy of Grand Valley State University" },
    { city: "Hersey", lat: 43.8564, lng: -85.445, videoUrl: "https://www.herseyweather.com/snowcam/image.jpg", courtesy: "Courtesy of HerseyWeather.com" },
    { city: "Cadillac", lat: 44.2511, lng: -85.4012, videoUrl: "https://api.wetmet.net/widgets/stream/frame.php?uid=ab6fdd36f8fc8b32e001e26112e01ffb", courtesy: "Courtesy of 9and10 News" },
    { city: "Houghton Lake", lat: 44.3148, lng: -84.7637, videoUrl: "http://www.houghtonlakecam.com/image.jpg", courtesy: "Courtesy of HoughtonLakeCam.com" },
    { city: "Bellaire", lat: 44.9761, lng: -85.2114, videoUrl: "https://www.bmarsh.com/weather/back1s.jpg", courtesy: "Courtesy of bmarsh.com" },
    { city: "St Ignace", lat: 45.8753, lng: -84.7275, videoUrl: "https://webcam.tufftrux.us/video.jpg", courtesy: "Courtesy of Voyager Inn" },
    { city: "Sault Ste Marie", lat: 46.4953, lng: -84.3453, videoUrl: "https://www.youtube.com/embed/2djzpbW_E1Q", courtesy: "Courtesy of StreamTime Live YouTube Channel" }
];

        let michiganBounds = L.latLngBounds();

        pinData.forEach(pin => {
            const marker = L.marker([pin.lat, pin.lng]).addTo(map);
            michiganBounds.extend([pin.lat, pin.lng]);

            fetch(`https://api.open-meteo.com/v1/forecast?latitude=${pin.lat}&longitude=${pin.lng}&current_weather=true&temperature_unit=fahrenheit`)
                .then(response => response.json())
                .then(weatherData => {
                    const temperature = weatherData.current_weather.temperature;
                    const weatherDescription = getWeatherDescription(weatherData.current_weather.weathercode);

                    let popupContent = `
                        <div class="map-popup">
                            <h3>${pin.title || pin.city}</h3>
                            <iframe src="${pin.videoUrl}" frameborder="0" allowfullscreen></iframe>
                            <div class="weather-info">
                                <p><b>Weather:</b> ${weatherDescription}</p>
                                <p><b>Temperature:</b> ${temperature}°F</p>
                            </div>
                            <button onclick="window.open('${pin.videoUrl}', '_blank');">OPEN IN NEW WINDOW</button>
                            <p class="courtesy-note">${pin.courtesy}</p>
                        </div>
                    `;

                    marker.bindPopup(popupContent);
                })
                .catch(error => {
                    console.error("Error fetching weather data:", error);
                });
        });

        map.fitBounds(michiganBounds, { padding: [50, 50] });

        function getWeatherDescription(weathercode) {
            const descriptions = {
                0: "Clear sky",
                1: "Mainly clear",
                2: "Partly cloudy",
                3: "Overcast",
                45: "Foggy",
                48: "Foggy",
                51: "Drizzle",
                61: "Rain",
                71: "Snow fall",
                80: "Rain showers",
                85: "Snow showers"
            };
            return descriptions[weathercode] || "Unknown";
        }
    </script>
</body>
</html>

